version: '3.8'
services:
  redis:
    image: redis
    ports:
      - "6379:6379"
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - 10000:10000
      - 10001:10001
  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    restart: always
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: optsol
      ME_CONFIG_BASICAUTH_PASSWORD: optsoldev
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: optsoldev
      ME_CONFIG_MONGODB_SERVER: host.docker.internal
    links:
      - mongo1
    depends_on: 
      - mongo1
  mongo1:
    image: mongo:4.2
    container_name: mongo1
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "30001" ]
    volumes:
      - mongodata-1:/data/db
    ports:
      - 30001:30001
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongo1:30001\"},{_id:1,host:\"mongo2:30002\"},{_id:2,host:\"mongo3:30003\"}]}).ok || rs.status().ok" | mongo --port 30001 --quiet) -eq 1
      interval: 10s
      start_period: 30s
  mongo2:
    image: mongo:4.2
    container_name: mongo2
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "30002" ]
    volumes:
      - mongodata-2:/data/db
    ports:
      - 30002:30002

  mongo3:
    image: mongo:4.2
    container_name: mongo3
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "30003" ]
    volumes:
      - mongodata-3:/data/db
    ports:
      - 30003:30003
volumes:
  mongodata: