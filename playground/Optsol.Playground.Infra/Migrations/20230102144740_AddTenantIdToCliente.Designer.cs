// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Optsol.Playground.Infra.Data.Context;

#nullable disable

namespace Optsol.Playground.Infra.Migrations
{
    [DbContext(typeof(PlaygroundContext))]
    [Migration("20230102144740_AddTenantIdToCliente")]
    partial class AddTenantIdToCliente
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Optsol.Playground.Domain.Entities.CartaoCreditoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoVerificacao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Validade")
                        .HasMaxLength(200)
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("CartaoCredito", (string)null);
                });

            modelBuilder.Entity("Optsol.Playground.Domain.Entities.ClienteEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ClienteId");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("Optsol.Playground.Domain.Entities.ClientePessoaFisicaEntity", b =>
                {
                    b.HasBaseType("Optsol.Playground.Domain.Entities.ClienteEntity");

                    b.Property<string>("Documento")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ClientePessoaFisica", (string)null);
                });

            modelBuilder.Entity("Optsol.Playground.Domain.Entities.ClientePessoaJuridicaEntity", b =>
                {
                    b.HasBaseType("Optsol.Playground.Domain.Entities.ClienteEntity");

                    b.Property<string>("NumeroCnpj")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ClientePessoaJuridica", (string)null);
                });

            modelBuilder.Entity("Optsol.Playground.Domain.Entities.CartaoCreditoEntity", b =>
                {
                    b.HasOne("Optsol.Playground.Domain.Entities.ClienteEntity", "Cliente")
                        .WithMany("Cartoes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Optsol.Playground.Domain.Entities.ClienteEntity", b =>
                {
                    b.OwnsOne("Optsol.Playground.Domain.ValueObjects.EmailValueObject", "Email", b1 =>
                        {
                            b1.Property<Guid>("ClienteEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("Email");

                            b1.HasKey("ClienteEntityId");

                            b1.ToTable("Cliente");

                            b1.WithOwner()
                                .HasForeignKey("ClienteEntityId");
                        });

                    b.OwnsOne("Optsol.Playground.Domain.ValueObjects.NomeValueObject", "Nome", b1 =>
                        {
                            b1.Property<Guid>("ClienteEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Nome")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("Nome");

                            b1.Property<string>("SobreNome")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("Sobrenome");

                            b1.HasKey("ClienteEntityId");

                            b1.ToTable("Cliente");

                            b1.WithOwner()
                                .HasForeignKey("ClienteEntityId");
                        });

                    b.Navigation("Email");

                    b.Navigation("Nome");
                });

            modelBuilder.Entity("Optsol.Playground.Domain.Entities.ClientePessoaFisicaEntity", b =>
                {
                    b.HasOne("Optsol.Playground.Domain.Entities.ClienteEntity", null)
                        .WithOne()
                        .HasForeignKey("Optsol.Playground.Domain.Entities.ClientePessoaFisicaEntity", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Optsol.Playground.Domain.Entities.ClientePessoaJuridicaEntity", b =>
                {
                    b.HasOne("Optsol.Playground.Domain.Entities.ClienteEntity", null)
                        .WithOne()
                        .HasForeignKey("Optsol.Playground.Domain.Entities.ClientePessoaJuridicaEntity", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Optsol.Playground.Domain.Entities.ClienteEntity", b =>
                {
                    b.Navigation("Cartoes");
                });
#pragma warning restore 612, 618
        }
    }
}
